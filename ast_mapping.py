from langchain.text_splitter import Language

EXTENSION_LANGUAGE_MAP = {
    ".py": Language.PYTHON,
    ".js": Language.JS,
    ".jsx": Language.JS,
    ".ts": Language.TS,
    ".tsx": Language.TS,
    ".java": Language.JAVA,
    ".cpp": Language.CPP,
    ".c": Language.C,
    ".cs": Language.CSHARP,
    ".rb": Language.RUBY,
    ".go": Language.GO,
    ".rs": Language.RUST,
    ".php": Language.PHP,
    ".swift": Language.SWIFT,
    ".kt": Language.KOTLIN,
    ".kts": Language.KOTLIN,
    ".sol": Language.SOL,
}

# AST parsing
# # Mapping of languages to significant node types for chunking
# SIGNIFICANT_NODE_TYPES = {
#     'python': [
#         'function_definition',
#         'class_definition',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'try_statement',
#         'with_statement',
#     ],
#     'javascript': [
#         'function_declaration',
#         'class_declaration',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#         'try_statement',
#     ],
#     'typescript': [
#         'function_declaration',
#         'class_declaration',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#         'try_statement',
#     ],
#     'java': [
#         'method_declaration',
#         'class_declaration',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#         'try_statement',
#     ],
#     'cpp': [
#         'function_definition',
#         'class_specifier',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#         'try_statement',
#     ],
#     'c': [
#         'function_definition',
#         'struct_specifier',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#     ],
#     'c_sharp': [
#         'method_declaration',
#         'class_declaration',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#         'try_statement',
#     ],
#     'ruby': [
#         'method',
#         'class',
#         'if_statement',
#         'for',
#         'while_statement',
#         'case_statement',
#     ],
#     'go': [
#         'function_declaration',
#         'type_declaration',
#         'if_statement',
#         'for_statement',
#     ],
#     'rust': [
#         'function_item',
#         'struct_item',
#         'if_expression',
#         'for_expression',
#         'while_expression',
#         'loop_expression',
#     ],
#     'php': [
#         'function_definition',
#         'class_declaration',
#         'if_statement',
#         'for_statement',
#         'while_statement',
#         'switch_statement',
#     ],
#     'html': [
#         'element',
#         'script_element',
#         'style_element',
#     ],
#     'css': [
#         'rule_set',
#         '@keyframes',
#         '@media',
#     ],
# }